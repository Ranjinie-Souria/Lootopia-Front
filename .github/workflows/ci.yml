name: Project Deployment

on:
  push:
    branches:
      - master
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Download project from git
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'

      - name: Install dependencies
        run: |
          echo "Installing dependencies..."
          npm install

      - name: Build frontend
        run: |
          echo "Building frontend..."
          npm run build
      - name: Verify build success
        if: failure()
        run: |
          echo "Build failed. Stopping deployment process."
          exit 1

      #- name: Test project
      #  run: |
      #    echo "Running tests..."
      #    npm test
      #- name: Verify tests success
      #  if: success()
      #  run: |&
      #    echo "Tests passed. Proceeding with deployment."
      # Add any additional commands to run after tests pass here
      #- name: Verify tests passed
      #  if: failure()
      #  run: |
      #    echo "Tests failed. Stopping deployment process."
      #    exit 1

      - name: Download project as artifact
        uses: actions/upload-artifact@master
        with:
          name: bundle
          path: ./dist/lootopia_front/browser

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download artifact
        uses: actions/download-artifact@master
        with:
          name: bundle
          path: ./

      - name: Deploy to Production Server
        if: github.ref == 'refs/heads/main'
        uses: easingthemes/ssh-deploy@main
        with:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          REMOTE_PORT: ${{ secrets.REMOTE_PORT }}
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          TARGET: /var/www/lootopia_front
          SCRIPT_BEFORE: |
            echo "Deploying to Main server..."
            echo "Before script"
            echo "---------------------"
            echo "Current directory:"
            pwd
            echo "Contents of current directory:"
            ls -al
            echo "---------------------"
            echo "Cleaning directory"
            sudo rm -rf /var/www/lootopia_front/*
            echo "---------------------"
          SCRIPT_AFTER: |
            echo "After script"
            echo "---------------------"
            echo "Current directory:"
            pwd
            echo "Contents of current directory:"
            ls -al
            echo "---------------------"
            echo "Cleaning up temporary files..."
            rm -f ./local_ssh_script-before-*.sh
            echo "Deployment to Production server completed."
            echo "---------------------"

      - name: Deploy to Staging Server
        if: github.ref == 'refs/heads/develop'
        uses: easingthemes/ssh-deploy@main
        with:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          REMOTE_PORT: ${{ secrets.REMOTE_PORT }}
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          TARGET: /var/www/lootopia_front_staging
          SCRIPT_BEFORE: |
            echo "Deploying to Main server..."
            echo "Before script"
            echo "---------------------"
            echo "Current directory:"
            pwd
            echo "Contents of current directory:"
            ls -al
            echo "---------------------"
            echo "Cleaning directory"
            sudo rm -rf /var/www/lootopia_front_staging/*
            echo "---------------------"
          SCRIPT_AFTER: |
            echo "After script"
            echo "---------------------"
            echo "Current directory:"
            pwd
            echo "Contents of current directory:"
            ls -al
            echo "---------------------"
            echo "Cleaning up temporary files..."
            rm -f ./local_ssh_script-before-*.sh
            echo "Deployment to Staging server completed."
            echo "---------------------"
